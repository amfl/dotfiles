# Notes -------------------------------------------------------------------- {{{

# "Ctrl+B ?" for in-tmux help!

# Tmux cheat sheet
# https://gist.github.com/andreyvit/2921703

# How settings work in tmux
# http://superuser.com/questions/758843/difference-between-global-server-session-and-window-options

# }}}
# General Settings---------------------------------------------------------- {{{

set -g automatic-rename "off"  # Rename window based on current process
set -g allow-rename "off"  # Allow automatic rename to clobber manual names
set -g base-index 1        # Windows start at 1 (not 0) because it's left of kb

# Enable 256 colors inside tmux
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-a-256-colour-terminal
set -g default-terminal "tmux-256color"

# Force tmux to interpret the following terminals as having true RGB capability (:Tc)
# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-rgb-colour
# This needs to match the $TERM of your actual terminal emulator outside tmux.
# It also needs to include `tmux-256color` if you are nesting tmux.
# To test, you can use:
# - The `bin/colortest-truecolor` script in this repo
# - tmux info | grep -E "(Terminal|Tc)"
set -as terminal-overrides ",rxvt-unicode-256color:Tc,xterm-256color:Tc,tmux-256color:Tc"

# Automatically renumber windows when they are moved/closed
set -g renumber-windows "on"

setw -g mode-keys vi

# Constrain only windows to smallest viewer, not entire sessions
setw -g aggressive-resize on

# change escape timeout to keep neovim happy
# https://github.com/neovim/neovim/wiki/FAQ
set -g escape-time 10

# }}}
# Mouse Functionality ------------------------------------------------------ {{{

# Enable mouse for different versions of tmux
# (If 'awk' exits with status 0, 'if-shell' evaluates to true)
# tmux < v2.1:
if-shell "tmux -V | head -1 | awk '{exit !($2 < \"2.1\")}'" \
    "setw -g mode-mouse on ; set -g mouse-select-pane on ; set -g mouse-resize-pane on ; set -g mouse-select-window on ; " \
    "set -g mouse on"

# }}}
# Remappings --------------------------------------------------------------- {{{

# # set Ctrl-a as the default prefix key combination
# # and unbind C-b to free it up
# set -g prefix C-a
# unbind C-b

# map vi movement keys as pane movement keys
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Access your last used window (Easy to remember, like alt-tab!)
bind-key Tab last-window

# Shift panes around windows
# http://maciej.lasyk.info/2014/Nov/19/tmux-join-pane/
bind-key S command-prompt -p "Join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "Send pane to:"  "join-pane -t '%%'"
# Break this pane off to a new window
bind-key B break-pane -t :

# Shift windows around sessions
# This is a default key! PREFIX .
# bind-key S command-prompt -p "Send window to:"  "move-window -t '%%'"

# Make a sTicky window (Who actually uses clock mode?)
# This allows you to bind a window into multiple sessions.
# Use `unlink-window` to reverse it.
bind-key t command-prompt -p "Stick window to:"  "link-window -t '%%'"

# Move the current window left/right
bind-key -r C-p swap-window -d -t -1
bind-key -r C-n swap-window -d -t +1

# reload ~/.tmux.conf using PREFIX R
bind-key R source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf."

# maintain pwd when splitting pane

if-shell "tmux -V | head -1 | awk '{exit !($2 > \"2.1\")}'" \
    "bind '\"' split-window -c \"#{pane_current_path}\" ; bind % split-window -h -c \"#{pane_current_path}\" ; bind c new-window -c \"#{pane_current_path}\" ; "

# }}}
# Theme -------------------------------------------------------------------- {{{

set -g status-fg white
set -g status-bg black

# Accent is set in a config which includes this one
# Remember you can use #[fg=$tmux_accent,bg=white] in any of these format strings.
set -g status-left ' #[bold]#S#[default] |'
set -g status-right ' #[bold]#(hostname)#[default] | %U %a %m-%d %H:%M '

set -g pane-active-border-style fg=$tmux_accent
set -g window-status-format " #I #W "

setw -g window-status-style fg=white
setw -g window-status-current-style bg=$tmux_accent,fg=$tmux_accent_fg,bold
setw -g window-status-current-format ' #I #W '

# }}}
# Clipboard ---------------------------------------------------------------- {{{

# # Try to mimic vim the best you can
bind-key -T copy-mode-vi v send-keys -X begin-selection
# # Interact with thinclient
# bind-key -t vi-copy y copy-pipe "sendclipboard"
# bind-key -t vi-copy p copy-pipe "puush | sendclipboard"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -ib"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel "xsel -ib"

# }}}
# Custom Functions --------------------------------------------------------- {{{

# Send the keys of today's date in YYYY-MM-DD
bind-key D run-shell 'tmux send-keys $(date +%F)'

# }}}
